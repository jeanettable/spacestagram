{"version":3,"sources":["SingleImgView.js","AllTilesView.js","api/index.js","App.js","index.js"],"names":["SingleImgView","props","image","console","log","useState","liked","setLike","toggleLikeStatus","className","src","hdurl","alt","title","explanation","type","onClick","AllTiles","getImages","baseURL","images","setImages","useEffect","a","imgData","length","map","idx","process","fetchImages","url","count","fetch","response","json","data","App","AllTilesView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA6CeA,EA3CO,SAACC,GACnB,IAAQC,EAAUD,EAAVC,MACRC,QAAQC,IAAI,WAAYF,GAExB,MAA2BG,oBAAS,GAApC,mBAAQC,EAAR,KAAeC,EAAf,KAEMC,EAAmB,WACrBD,GAASA,IAGT,OACI,qCACI,qBAAKE,UAAU,gBAAf,SACI,qBAAKC,IAAKR,EAAMS,MAAOC,IAAG,UAAKV,EAAMW,MAAX,aAAqBX,EAAMY,iBAEzD,sBAAKL,UAAU,mBAAf,UACI,6BAAKP,EAAMW,QACX,4BAAIX,EAAMY,iBAEd,qBAAKL,UAAU,mBAAf,SACCH,EACG,wBACAG,UAAU,cACVM,KAAK,SACLC,QAASR,EAHT,kBAQA,wBACAC,UAAU,eACVM,KAAK,SACLC,QAASR,EAHT,wBCsBLS,EAjDE,SAAChB,GACd,IAAQiB,EAAuBjB,EAAvBiB,UAAWC,EAAYlB,EAAZkB,QACnB,EAA8Bd,mBAAS,IAAvC,mBAAQe,EAAR,KAAgBC,EAAhB,KAkBE,OAbFC,oBAAS,sBAAC,4BAAAC,EAAA,sEACgBL,EAAUC,GAD1B,OACAK,EADA,OAENrB,QAAQC,IAAI,aAAcoB,GAC1BH,EAAUG,GAHJ,2CAIP,CAACL,EAASD,IAUP,qBAAKT,UAAU,mBAAf,SACI,qBAAKA,UAAU,WAAf,SACCW,EAAOK,OACNL,EAAOM,KAAI,SAACxB,EAAOyB,GAAR,OACP,qBAAelB,UAAU,gBAAzB,SACI,cAAC,EAAD,CAAeP,MAAOA,KADhByB,MAgBlB,mFC7CCR,EAAO,sDAAkDS,4CAG/D,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,+BAAAP,EAAA,6DAAgCQ,EAAhC,+BAAwC,GAAxC,uBAEC5B,QAAQC,IAAI,yBAFb,SAGwB4B,MAAM,GAAD,OAAIF,EAAJ,kBAAiBC,IAH9C,cAGOE,EAHP,OAIC9B,QAAQC,IAAI,cAAe6B,GAJ5B,SAKoBA,EAASC,OAL7B,cAKOC,EALP,OAMChC,QAAQC,IAAI,UAAW+B,GANxB,kBAOQA,GAPR,4C,wBCgBQC,MAdf,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAI,uDAAuDD,UAAU,WAAWG,IAAI,SACvF,iDAEJ,sBAAMH,UAAU,qBAAhB,SACE,cAAC4B,EAAD,CAAcnB,UAAWW,EAAaV,QAASA,UCPvDmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54857927.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SingleImgView = (props) => {\n    const { image } = props;\n    console.log('image>>>', image);\n\n    const [ liked, setLike ] = useState(false);\n\n    const toggleLikeStatus = () => {\n        setLike(!setLike);\n    }\n\n        return(\n            <>\n                <div className=\"img-container\" >\n                    <img src={image.hdurl} alt={`${image.title}: ${image.explanation}`}/>\n                </div>\n                <div className=\"img-info-display\" >\n                    <h3>{image.title}</h3>\n                    <p>{image.explanation}</p>\n                </div>\n                <div className=\"like-interaction\" > \n                {liked ? (\n                    <button \n                    className=\"like-btn-on\" \n                    type=\"button\"\n                    onClick={toggleLikeStatus} >\n                        Like\n                        {/* heart icon placeholder, will toggle class */}\n                    </button>\n                ) : (\n                    <button \n                    className=\"like-btn-off\" \n                    type=\"button\"\n                    onClick={toggleLikeStatus} >\n                        Like\n                        {/* heart icon placeholder, will toggle class */}\n                    </button>   \n                )}\n                    \n                </div>\n            </ >\n        )\n    }\n\nexport default SingleImgView;","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\nimport SingleImgView from './SingleImgView';\n\nconst AllTiles = (props) =>  {\n    const { getImages, baseURL } = props;\n    const [ images, setImages ] = useState([]);\n        // for use with datepicker?\n        // this.handleChange = this.handleChange.bind(this);\n\n\n    useEffect(async () => {\n        const imgData = await getImages(baseURL);\n        console.log('imgData>>>', imgData);\n        setImages(imgData);\n    }, [baseURL, getImages] )\n\n    // componentDidMount() {\n    //     const imgData = getImages(baseURL);\n    //     this.setState({\n    //       images: imgData\n    //     });\n    // }\n\n      return (\n          <div className=\"images-container\">\n              <div className=\"list-col\" >\n              {images.length ? (\n                images.map((image, idx) => (\n                    <div key={idx} className=\"list-img-card\">\n                        <SingleImgView image={image} />\n                        {/* <Link to={`/${idx}`} >\n                            <img src={image.hdurl} alt={`${image.title}: ${image.explanation}`}/>\n                        </Link> */}\n                {/* <button\n                  className=\"delete-button\"\n                  type=\"button\"\n                  onClick={() => this.props.deleteRobot(robot.id)}\n                >\n                  X\n                </button>  */}\n              </div>\n            ))  \n          ) : ( \n            //   adjust so this can be seen!!!\n            <h1>Please wait, retrieving signal from Space...</h1>\n          )}\n              </div>\n\n          </div>\n      )\n}\n\nexport default AllTiles;\n","export const baseURL = `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_MY_API_KEY}`;\n\n// intended to be called with baseURL:\nexport async function fetchImages(url, count = 12, options) {\n    // if dates not selected, and options object not passed in:\n        console.log('get images fetch hit!');\n        const response = await fetch(`${url}&count=${count}`);\n        console.log('response>>>', response);\n        const data = await response.json();\n        console.log('data>>>', data);\n        return data;\n}\n\n// intended for use with a date-picker\nexport async function fetchImagesByDate(url, options) {\n        const { start_date, end_date } = options;\n        const dateURL = `${url}&start_date=${start_date}&end_date=${end_date}`;\n        const response = await fetch(dateURL);\n        const data = await response.json();\n        console.log('data>>>', data);\n        return data;\n};\n","import './App.css';\nimport AllTilesView from './AllTilesView';\nimport { fetchImages, baseURL } from './api';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://www.svgrepo.com/show/85954/planet-saturn.svg\" className=\"App-logo\" alt=\"logo\" />\n          <h1>Spacestagram</h1>\n      </header>\n      <main className=\"App-body-container\">\n        <AllTilesView getImages={fetchImages} baseURL={baseURL} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}