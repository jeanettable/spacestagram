{"version":3,"sources":["SingleImgView.js","AllTilesView.js","api/index.js","App.js","index.js"],"names":["useStyles","makeStyles","cardRoot","display","padding","details","flexDirection","content","flex","cover","height","width","media","SingleImgView","props","classes","image","useState","liked","setLike","toggleLikeStatus","console","log","Container","maxWidth","className","Card","CardMedia","hdurl","Box","CardContent","title","IconButton","color","onClick","fontSize","rootCol","AllTiles","getImages","baseURL","images","setImages","useEffect","a","imgData","Grid","container","direction","alignItems","length","map","idx","process","fetchImages","url","count","fetch","response","json","data","App","src","alt","AllTilesView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAaMA,EAAYC,aAAW,iBAAO,CAClCC,SAAU,CACRC,QAAS,OACTC,QAAS,IAEXC,QAAS,CACPF,QAAS,OACTG,cAAe,UAEjBC,QAAS,CACPC,KAAM,YAERC,MAAO,CACLC,OAAQ,IACRC,MAAO,KAETC,MAAO,CACLD,MAAO,OACPD,OAAQ,YAyCGG,EArCO,SAACC,GACrB,IAAMC,EAAUf,IACRgB,EAAUF,EAAVE,MAER,EAAyBC,oBAAS,GAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAmB,WACvBD,GAASD,GACTG,QAAQC,IAAI,oBAAqBJ,IAGnC,OACE,cAACK,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAWV,EAAQb,SAA5C,SACE,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWF,UAAWV,EAAQH,MAAOI,MAAOA,EAAMY,QAClD,cAACC,EAAA,EAAD,CAAKJ,UAAWV,EAAQV,QAAxB,SACE,cAACyB,EAAA,EAAD,CAAaL,UAAWV,EAAQR,QAAhC,SACE,6BAAKS,EAAMe,YAIf,qBAAKN,UAAU,mBAAf,SACGP,EACC,cAACc,EAAA,EAAD,CAAYC,MAAM,YAAYC,QAAS,kBAAMd,KAA7C,SACE,cAAC,IAAD,CAAce,SAAS,YAGzB,cAACH,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAAS,kBAAMd,KAA3C,SACE,cAAC,IAAD,CAAoBe,SAAS,oB,QCvDrCnC,EAAYC,aAAW,iBAAO,CAChCmC,QAAS,CACPjC,QAAS,OACTK,KAAM,WACNJ,QAAS,QAmCAiC,EA/BE,SAACvB,GACd,IAAMC,EAAUf,IACRsC,EAAuBxB,EAAvBwB,UAAWC,EAAYzB,EAAZyB,QACnB,EAA8BtB,mBAAS,IAAvC,mBAAQuB,EAAR,KAAgBC,EAAhB,KAWE,OANFC,oBAAS,sBAAC,4BAAAC,EAAA,sEACgBL,EAAUC,GAD1B,OACAK,EADA,OAENvB,QAAQC,IAAI,aAAcsB,GAC1BH,EAAUG,GAHJ,2CAIP,CAACL,EAASD,IAGP,qBAAKb,UAAU,mBAAf,SACI,cAACoB,EAAA,EAAD,CAAMC,WAAS,EAACrB,UAAWV,EAAQqB,QAASW,UAAU,SAASC,WAAW,SAA1E,SACCR,EAAOS,OACNT,EAAOU,KAAI,SAAClC,EAAOmC,GAAR,OACP,qBAAe1B,UAAU,gBAAzB,SACI,cAAC,EAAD,CAAeT,MAAOA,KADhBmC,MAKlB,mFCxCCZ,EAAO,sDAAkDa,4CAG/D,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,+BAAAX,EAAA,6DAAgCY,EAAhC,+BAAwC,GAAxC,uBAEClC,QAAQC,IAAI,yBAFb,SAGwBkC,MAAM,GAAD,OAAIF,EAAJ,kBAAiBC,IAH9C,cAGOE,EAHP,gBAIoBA,EAASC,OAJ7B,cAIOC,EAJP,yBAKQA,GALR,4C,wBCgBQC,MAdf,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKoC,IAAI,uDAAuDpC,UAAU,WAAWqC,IAAI,SACvF,iDAEJ,sBAAMrC,UAAU,qBAAhB,SACE,cAACsC,EAAD,CAAczB,UAAWe,EAAad,QAASA,UCPvDyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a520f2d0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport {\n  makeStyles,\n  Box,\n  Container,\n  Card,\n  CardMedia,\n  CardContent,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  cardRoot: {\n    display: \"flex\",\n    padding: 10,\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  cover: {\n    height: 200,\n    width: 200,\n  },\n  media: {\n    width: \"60vh\",\n    height: \"60vh\",\n  },\n}));\n\nconst SingleImgView = (props) => {\n  const classes = useStyles();\n  const { image } = props;\n\n  const [liked, setLike] = useState(false);\n\n  const toggleLikeStatus = () => {\n    setLike(!liked);\n    console.log(\"status of liked: \", liked);\n  };\n\n  return (\n    <Container maxWidth=\"md\" className={classes.cardRoot}>\n      <Card>\n        <CardMedia className={classes.media} image={image.hdurl}></CardMedia>\n        <Box className={classes.details}>\n          <CardContent className={classes.content}>\n            <h3>{image.title}</h3>\n            {/* <p>{image.explanation}</p> */}\n          </CardContent>\n        </Box>\n        <div className=\"like-interaction\">\n          {liked ? (\n            <IconButton color=\"secondary\" onClick={() => toggleLikeStatus()}>\n              <FavoriteIcon fontSize=\"large\"></FavoriteIcon>\n            </IconButton>\n          ) : (\n            <IconButton color=\"primary\" onClick={() => toggleLikeStatus()}>\n              <FavoriteBorderIcon fontSize=\"large\"></FavoriteBorderIcon>\n            </IconButton>\n          )}\n        </div>\n      </Card>\n    </Container>\n  );\n};\n\nexport default SingleImgView;\n","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\nimport SingleImgView from './SingleImgView';\nimport {\n    makeStyles,\n    Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n    rootCol: {\n      display: \"flex\",\n      flex: \"1 0 auto\",\n      padding: 10,\n    },\n  }));\n\nconst AllTiles = (props) =>  {\n    const classes = useStyles();\n    const { getImages, baseURL } = props;\n    const [ images, setImages ] = useState([]);\n        // for use with datepicker?\n        // this.handleChange = this.handleChange.bind(this);\n\n\n    useEffect(async () => {\n        const imgData = await getImages(baseURL);\n        console.log('imgData>>>', imgData);\n        setImages(imgData);\n    }, [baseURL, getImages] )\n\n      return (\n          <div className=\"images-container\">\n              <Grid container className={classes.rootCol} direction=\"column\" alignItems=\"center\" >\n              {images.length ? (\n                images.map((image, idx) => (\n                    <div key={idx} className=\"list-img-card\">\n                        <SingleImgView image={image} />\n              </div>\n            ))  \n          ) : ( \n            <h1>Please wait, retrieving signal from Space...</h1>\n          )}\n              </Grid>\n          </div>\n      )\n}\n\nexport default AllTiles;\n","export const baseURL = `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_MY_API_KEY}`;\n\n// intended to be called with baseURL:\nexport async function fetchImages(url, count = 16, options) {\n    // if dates not selected, and options object not passed in:\n        console.log('get images fetch hit!');\n        const response = await fetch(`${url}&count=${count}`);\n        const data = await response.json();\n        return data;\n}\n\n// intended for use with a date-picker\nexport async function fetchImagesByDate(url, options) {\n        const { start_date, end_date } = options;\n        const dateURL = `${url}&start_date=${start_date}&end_date=${end_date}`;\n        const response = await fetch(dateURL);\n        const data = await response.json();\n        console.log('data>>>', data);\n        return data;\n};\n","import './App.css';\nimport AllTilesView from './AllTilesView';\nimport { fetchImages, baseURL } from './api';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"https://www.svgrepo.com/show/85954/planet-saturn.svg\" className=\"App-logo\" alt=\"logo\" />\n          <h1>Spacestagram</h1>\n      </header>\n      <main className=\"App-body-container\">\n        <AllTilesView getImages={fetchImages} baseURL={baseURL} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}